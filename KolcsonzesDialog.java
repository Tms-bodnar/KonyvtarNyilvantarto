/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Frame;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.IModel;
import model.Konyv;
import GUI.TagokDialog;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Tag;

/**
 *
 * @author Bodnár Tamás <tms.bodnar@gmail.com> | www.kalandlabor.hu
 */
public class KolcsonzesDialog extends javax.swing.JDialog {
        private Frame parent;
        private IModel model;
        private Vector<Konyv> konyvek;
        private DefaultTableModel dtm;
       
    /**
     * Creates new form KolcsonzesDialog
     */
    public KolcsonzesDialog(java.awt.Frame parent, boolean modal, IModel model) {
        super(parent, modal);
        initComponents();
        this.model = model;
        this.parent = parent;
        dtm = (DefaultTableModel) jtKonyvek.getModel();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtKonyvek = new javax.swing.JTable();
        jbKivalaszt = new javax.swing.JButton();
        jbMegsem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtKonyvek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Szerző", "Cím", "Oldalszám", "Kölcsönözhető"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtKonyvek);

        jbKivalaszt.setText("Könyv kiválasztása");
        jbKivalaszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbKivalasztActionPerformed(evt);
            }
        });

        jbMegsem.setText("Rendben");
        jbMegsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMegsemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbMegsem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbKivalaszt, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbKivalaszt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbMegsem))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbKivalasztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbKivalasztActionPerformed
        int selected = jtKonyvek.getSelectedRow();
        
        if(selected >= 0 && selected <= jtKonyvek.getRowCount()){
            Konyv konyv = konyvek.elementAt(selected);
            if(konyv.getTagId()==0){
            KolcsonzesTag kt = new KolcsonzesTag(parent, true, model);
            kt.setVisible(true);
            konyv.setTagId(kt.getKolcsozoId());
            try {
                model.updateKonyv(konyv);
                updateTable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
            }
            }else{
                int reply = JOptionPane.showConfirmDialog(parent, "Visszahoztad?", "A könyv nincs a könyvtárban.", JOptionPane.YES_NO_OPTION);
                if ( reply == 0){
                    try {
                        konyv.setTagId(reply);
                        model.updateKonyv(konyv);
                        updateTable();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);Logger.getLogger(KolcsonzesDialog.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }else JOptionPane.showMessageDialog(rootPane, "Nincs könyv kiválasztva!", "Hibás adat!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jbKivalasztActionPerformed

    private void jbMegsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMegsemActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jbMegsemActionPerformed

    /**
     * @param args the command line arguments
     */

private void updateTable() {
        dtm.getDataVector().removeAllElements();
            try {
                konyvek = model.getKonyvek();
             } catch (SQLException ex) {
          JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
             }
        for(Konyv k : konyvek ){
            Vector sor = new Vector<>();
            sor.add(k.getId());
            sor.add(k.getSzerzo());
            sor.add(k.getCim());
            sor.add(k.getOldalszam());
            if(k.getTagId()== 0)sor.add(true);
            else sor.add(false);
            dtm.addRow(sor);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbKivalaszt;
    private javax.swing.JButton jbMegsem;
    private javax.swing.JTable jtKonyvek;
    // End of variables declaration//GEN-END:variables
}
