/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Frame;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.IModel;
import model.Konyv;

/**
 *
 * @author Bodnár Tamás <tms.bodnar@gmail.com> | www.kalandlabor.hu
 */
public class KonyvekDialog extends javax.swing.JDialog {
        private Frame parent;
        private IModel model;
        private Vector<Konyv> konyvek;
        private DefaultTableModel dtm;
    /**
     * Creates new form KonyvekDialog
     */
    public KonyvekDialog(java.awt.Frame parent, boolean modal, IModel model) {
        super(parent, modal);
        initComponents();
        this.model = model;
        this.parent = parent;
        dtm = (DefaultTableModel)jtKonyvek.getModel();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbaddKonyv = new javax.swing.JButton();
        jbremoveKonyv = new javax.swing.JButton();
        jbUpdateKonyv = new javax.swing.JButton();
        jbMegsem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtKonyvek = new javax.swing.JTable();
        jbKonyvAdatok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Könyvek adatai");

        jbaddKonyv.setText("Hozzáadás");
        jbaddKonyv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbaddKonyvActionPerformed(evt);
            }
        });

        jbremoveKonyv.setText("Eltávolítás");
        jbremoveKonyv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbremoveKonyvActionPerformed(evt);
            }
        });

        jbUpdateKonyv.setText("Szerkesztés");
        jbUpdateKonyv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateKonyvActionPerformed(evt);
            }
        });

        jbMegsem.setText("Mégsem");
        jbMegsem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMegsemActionPerformed(evt);
            }
        });

        jtKonyvek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Szerző", "Cím", "Oldalszám", "Kölcsönözhető"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtKonyvek.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jtKonyvek);

        jbKonyvAdatok.setText("Könyv adatai");
        jbKonyvAdatok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbKonyvAdatokActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jbMegsem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbaddKonyv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbremoveKonyv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbUpdateKonyv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbKonyvAdatok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbaddKonyv)
                        .addGap(18, 18, 18)
                        .addComponent(jbremoveKonyv)
                        .addGap(18, 18, 18)
                        .addComponent(jbUpdateKonyv)
                        .addGap(18, 18, 18)
                        .addComponent(jbKonyvAdatok)
                        .addGap(206, 206, 206)
                        .addComponent(jbMegsem)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbaddKonyvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbaddKonyvActionPerformed
        Konyv konyv = new Konyv(); 
        jdKonyvSzerkeszt ksz = new jdKonyvSzerkeszt(parent, true, konyv);
         ksz.setVisible(true);
         if( ksz.isMentes()){
             try {
                 model.addKonyv(ksz.getKonyv());
                 updateTable();
             } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
             }
         }          
    }//GEN-LAST:event_jbaddKonyvActionPerformed

    private void jbUpdateKonyvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateKonyvActionPerformed
        
        int selected = jtKonyvek.getSelectedRow();
        if(selected >= 0 && selected <= jtKonyvek.getRowCount()){
        Konyv konyv = konyvek.elementAt(selected);
        jdKonyvSzerkeszt ksz = new jdKonyvSzerkeszt(parent, true, konyv);
        ksz.setVisible(true);
        if( ksz.isMentes()){
            try {
                model.updateKonyv(konyv);
                updateTable();
                System.out.println(jtKonyvek.getSelectedRow());;
//                selected = 0;
                System.out.println(selected);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
            }
        }
        }else JOptionPane.showMessageDialog(rootPane, "Nincs könyv kiválasztva!", "Hibás adat!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jbUpdateKonyvActionPerformed

    private void jbremoveKonyvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbremoveKonyvActionPerformed
        int selected = jtKonyvek.getSelectedRow();
        if(selected >= 0 && selected <= jtKonyvek.getRowCount()){
            Konyv konyv = konyvek.elementAt(selected);
            int reply = JOptionPane.showConfirmDialog(parent, "Biztosan törlöd?", "Törlési megerősítés!", JOptionPane.YES_NO_OPTION);
            if( reply == 0){
            try {
                model.removeKonyv(konyv);
                updateTable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
            }
            }
        }else JOptionPane.showMessageDialog(rootPane, "Nincs könyv kiválasztva!", "Hibás adat!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jbremoveKonyvActionPerformed

    private void jbMegsemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMegsemActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jbMegsemActionPerformed

    private void jbKonyvAdatokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbKonyvAdatokActionPerformed
        int selected = jtKonyvek.getSelectedRow();
        if( selected >= 0 && selected < jtKonyvek.getRowCount()){
            Konyv konyv = konyvek.elementAt(selected);
            Adatok ja = new Adatok(parent, true, model, konyv);
            ja.setVisible(true);
        }else JOptionPane.showMessageDialog(rootPane, "Nincs könyv kiválasztva!", "Hibás adat!", JOptionPane.ERROR_MESSAGE);    
    }//GEN-LAST:event_jbKonyvAdatokActionPerformed


    private void updateTable() {
        dtm.getDataVector().removeAllElements();
            try {
                konyvek = model.getKonyvek();
             } catch (SQLException ex) {
          JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Adatbázis hiba!", JOptionPane.ERROR_MESSAGE);
             }
        for(Konyv k : konyvek ){
            Vector sor = new Vector<>();
            sor.add(k.getId());
            sor.add(k.getSzerzo());
            sor.add(k.getCim());
            sor.add(k.getOldalszam());
            if(k.getTagId()== 0)sor.add(true);
            else sor.add(false);
            dtm.addRow(sor);
        }
    }

    public JTable getJtKonyvek() {
        return jtKonyvek;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbKonyvAdatok;
    private javax.swing.JButton jbMegsem;
    private javax.swing.JButton jbUpdateKonyv;
    private javax.swing.JButton jbaddKonyv;
    private javax.swing.JButton jbremoveKonyv;
    private javax.swing.JTable jtKonyvek;
    // End of variables declaration//GEN-END:variables
}
